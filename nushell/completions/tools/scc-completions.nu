# Written by graefchen
# based on: Version 3.4.0
# link: https://github.com/boyter/scc

# Sloc, Cloc and Code. Count lines of code in a directory with complexity estimation.
export extern "scc" [
	--avg-wage: int               # average wage value used for basic COCOMO calculation (default 56286)
	--binary                      # disable binary file detection
	--by-file                     # display output for every file
	--character(-m)               # calculate max and mean characters per line
	--ci                          # enable CI output settings where stdout is ASCII
	--cocomo-project-type: string # change COCOMO model type [organic, semi-detached, embedded, "custom,1,1,1,1"] (default "organic")
	--count-as string             # count extension as language [e.g. jsp:htm,chead:"C Header" maps extension jsp to html and chead to C Header]
	--count-ignore                # set to allow .gitignore and .ignore files to be counted
	--currency-symbol: string     # set currency symbol (default "$")
	--debug                       # enable debug output
	--dryness(-a)                 # calculate the DRYness of the project (implies --uloc)
	--eaf float                   # the effort adjustment factor derived from the cost drivers (1.0 if rated nominal) (default 1)
	--exclude-dir string          # directories to exclude (default [.git,.hg,.svn])
	--exclude-ext(-x): string     # ignore file extensions (overrides include-ext) [comma separated list: e.g. go,java,js]
	--exclude-file(-n): string    # ignore files with matching names (default [package-lock.json,Cargo.lock,yarn.lock,pubspec.lock,Podfile.lock,pnpm-lock.yaml])
	--file-gc-count: int          # number of files to parse before turning the GC on (default 10000)
	--format(-f): string          # set output format [tabular, wide, json, json2, csv, csv-stream, cloc-yaml, html, html-table, sql, sql-insert, openmetrics] (default "tabular")
	--format-multi: string        # have multiple format output overriding --format [e.g. tabular:stdout,csv:file.csv,json:file.json]
	--gen                         # identify generated files
	--generated-markers: string   # string markers in head of generated files (default [do not edit,<auto-generated />])
	--help(-h)                    # help for scc
	--include-ext(-i): string     # limit to file extensions [comma separated list: e.g. go,java,js]
	--include-symlinks            # if set will count symlink files
	--languages(-l)               # print supported languages and extensions
	--large-byte-count: int       # number of bytes a file can contain before being removed from output (default 1000000)
	--large-line-count: int       # number of lines a file can contain before being removed from output (default 40000)
	--min                         # identify minified files
	--min-gen(-z)                 # identify minified or generated files
	--min-gen-line-length: int    # number of bytes per average line for file to be considered minified or generated (default 255)
	--no-cocomo                   # remove COCOMO calculation output
	--no-complexity(-c)           # skip calculation of code complexity
	--no-duplicates(-d)           # remove duplicate files from stats and output
	--no-gen                      # ignore generated files in output (implies --gen)
	--no-gitignore                # disables .gitignore file logic
	--no-gitmodule                # disables .gitmodules file logic
	--no-hborder                  # remove horizontal borders between sections
	--no-ignore                   # disables .ignore file logic
	--no-large                    # ignore files over certain byte and line size set by max-line-count and max-byte-count
	--no-min                      # ignore minified files in output (implies --min)
	--no-min-gen                  # ignore minified or generated files in output (implies --min-gen)
	--no-size                     # remove size calculation output
	--not-match(-M): list<string> # ignore files and directories matching regular expression
	--output(-o): string          # output filename (default stdout)
	--overhead float              # set the overhead multiplier for corporate overhead (facilities, equipment, accounting, etc.) (default 2.4)
	--percent(-p)                 # include percentage values in output
	--remap-all: string           # inspect every file and remap by checking for a string and remapping the language [e.g. "-*- C++ -*-":"C Header"]
	--remap-unknown: string       # inspect files of unknown type and remap by checking for a string and remapping the language [e.g. "-*- C++ -*-":"C Header"]
	--size-unit: string           # set size unit [si, binary, mixed, xkcd-kb, xkcd-kelly, xkcd-imaginary, xkcd-intel, xkcd-drive, xkcd-bakers] (default "si")
	--sloccount-format            # print a more SLOCCount like COCOMO calculation
	--sort(-s): string            # column to sort by [files, name, lines, blanks, code, comments, complexity] (default "files")
	--sql-project: string         # use supplied name as the project identifier for the current run. Only valid with the --format sql or sql-insert option
	--trace(-t)                   # enable trace output (not recommended when processing multiple files)
	--uloc(-u)                    # calculate the number of unique lines of code (ULOC) for the project
	--verbose(-v)                 # verbose output
	--version                     # version for scc
	--wide(-w)                    # wider output with additional statistics (implies --complexity)
]
