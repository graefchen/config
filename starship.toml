# ~/.config/starship.toml

# get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

add_newline = false

format = """
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$directory\
$vcsh\
$fossil_branch\
$fossil_metrics\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
${custom.jj}\
$pijul_channel\
$docker_context\
$package\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$gleam\
$golang\
$guix_shell\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$quarto\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$typst\
$vlang\
$vagrant\
$zig\
$buf\
$nix_shell\
$conda\
$meson\
$spack\
$memory_usage\
$aws\
$gcloud\
$openstack\
$azure\
$nats\
$direnv\
$env_var\
$mise\
$crystal\
$custom\
$sudo\
$cmd_duration\
$line_break\
$jobs\
$battery\
$time\
$status\
$os\
$container\
$netns\
$shell\
$character"""

[username]
disabled = false
show_always = true

# show which shell I am using (bash,nu,powershell,etc...)
[shell]
disabled = false

# Made that also cpp is shown under this ... lol
# mostly for clang (while I use tcc for c)
# I also could add the msvc (cl) version ... but that seems complicated
[c]
symbol = "🦏 "
# the commands of the Tiny C Compiler
# commands = [["tcc", "-v"]]
commands = [["clang", "--version"], ["tcc", "-v"]]
# detecting some c and cpp files, also cats because it is funny
# (and is accepted as a c file extension on github)
detect_extensions = ["c", "h", "cats", "cc", "hh", "cpp", "hpp", "c++", "h++"]
# detects the .clangd file => LSP(Language Server Protocol) for clang
detect_files = [".clangd"]

[cmake]
symbol = "🐐 "

[dart]
symbol = "🦔 "

[deno]
symbol = "🦕 "
# just detecting strict deno files (or deno related files)
detect_files = ["deno.json", "deno.jsonc", "deno.lock", "jsr.json"]

[dotnet]
symbol = "🦑 "

[elm]
symbol = "🦌 "

[fennel]
symbol = "🐁 "

[golang]
symbol = "🐹 "

[git_metrics]
disabled = false

[haskell]
symbol = "🦈 "
detect_extensions = ["hs", "cabal", "hs-boot", "hsc"]

[java]
symbol = "🐈 "
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc", "jav"]

[julia]
symbol = "🦗 "

[kotlin]
symbol = "🐙 "
detect_extensions = ["kt", "kts", "ktm"]

[lua]
symbol = "🐜 "
# appart from lua we also want to detect luarocks
# it would probably be better to have this in [package]
# also detect other files that are detected as lua files by github
detect_extensions = ["lua", "fgci", "nse", "p8", "rbxs", "rockspec", "wlua"]
detect_folders = ["lua", "lua_modules", ".luarocks"]

[meson]
symbol = "🐏 "

[nodejs]
symbol = "🐝 "

[odin]
symbol = "🐇 "
detect_files = ["ols.json"]

[perl]
symbol = "🐪 "
detect_extensions = ["pl", "al", "cgi", "fcgi", "perl", "ph", "pm", "pod"]

[php]
symbol = "🐘 "
detect_extensions = ["php", "aw", "ctp", "php3", "php4", "php5", "phps", "phps"]

[purescript]
symbol = "🦚"

[python]
symbol = "🐍 "

[rlang]
symbol = "🦉 "
detect_extensions = ["R", "Rd", "Rmd", "Rproj", "Rsx", "r", "rd", "rsx"]

[ruby]
symbol = "🦙 "
detect_extensions = ["rb", "builder", "gemspec", "rbw", "rbx", "rb", "ruby"]

[rust]
symbol = "🦀 "

[scala]
symbol = "🦟 "
detect_extensions = ["sbt", "scala", "kojo", "sc"]

[zig]
symbol = "🦎 "

[custom.jj]
command = "prompt"
format = "$output"
ignore_timeout = true
shell = ["starship-jj", "--ignore-working-copy", "starship"]
use_stdin = false
when = true
